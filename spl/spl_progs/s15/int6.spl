//READ INTERRUPT


// FileDescriptor = index of file in Per-Process Resource Table 
// For Files ==> 0 -> 7
// For terminal ==> -1

alias userSP R5;
userSP = SP;


[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+ 1] * 16 + 11] * 512 - 1;



alias system_call_number R4;
system_call_number = [[PTBR + 2 * ((userSP - 5) / 512)] * 512 + (userSP - 5) % 512];
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9 ] = system_call_number;


alias RETURN R2;
RETURN = [PTBR + 2 * ((userSP - 1) / 512)] * 512 + (userSP - 1) % 512;


alias WordAddress R6;
alias FileDescriptor R7;
FileDescriptor = [[PTBR + 2 * ((userSP - 4) / 512)] * 512 + (userSP - 4) % 512];
WordAddress = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + (userSP - 3) % 512];



// For terminal read
if (FileDescriptor == -1) then
    multipush(R1,R2,R3);
    R1 = 4;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R3 = WordAddress;
    call MOD_4;
    multipop(R1,R2,R3);
    [RETURN] = 0;


    SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
    ireturn;
endif;


// For File read 
if (FileDescriptor > -1 && FileDescriptor < 8) then
    alias OpenFileIndex R1;
    alias userpage R3;
    alias inodeIndex R4;
    
    userpage = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11];

    if ([userpage * 512 + 496 + FileDescriptor * 2] != FILE) then
        [RETURN] = -1;
        SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
        ireturn;
    endif;

    OpenFileIndex = [userpage * 512 + 496 + FileDescriptor * 2 + 1];
    inodeIndex = [OPEN_FILE_TABLE + OpenFileIndex * 4];

    multipush(R1,R2,R3,R4);
    R1 = 4;
    R2 = inodeIndex;
    R3 = [SYSTEM_STATUS_TABLE + 1];

    call MOD_0;
    multipop(R1,R2,R3,R4);
    if (R0 == -1) then
        [RETURN] = -1;
        SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
        ireturn;
    endif;

    R7 = [OPEN_FILE_TABLE + OpenFileIndex * 4 + 2];

    if (inodeIndex == 0) then
        if (R7 == 480) then
            multipush(R1,R2,R3,R4);
            R1 = 5;
            R2 = inodeIndex;
            R3 = [SYSTEM_STATUS_TABLE + 1];

            call MOD_0;
            multipop(R1,R2,R3,R4);
            [RETURN] = -2;
            SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
            [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
            ireturn;
        endif;
        [[PTBR + 2 * ((WordAddress) / 512)] * 512 + (WordAddress) % 512] = [ROOT_FILE + R7];
        [OPEN_FILE_TABLE + OpenFileIndex * 4 + 2] = [OPEN_FILE_TABLE + OpenFileIndex * 4 + 2] + 1;
    else
        if (R7 == [INODE_TABLE + inodeIndex * 16 + 2]) then
            multipush(R1,R2,R3,R4);
            R1 = 5;
            R2 = inodeIndex;
            R3 = [SYSTEM_STATUS_TABLE + 1];

            call MOD_0;
            multipop(R1,R2,R3,R4);
            [RETURN] = -2;
            SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
            [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
            ireturn;
        endif;
        

        backup;
        R1 = 2;
        R2 = [INODE_TABLE + inodeIndex * 16 + 8 + R7 / 512];
        R3 = R7 % 512;
        R4 = [PTBR + 2 * ((WordAddress) / 512)] * 512 + (WordAddress) % 512;

        call MOD_3;
        restore;

        [OPEN_FILE_TABLE + OpenFileIndex * 4 + 2] = [OPEN_FILE_TABLE + OpenFileIndex * 4 + 2] + 1;
    endif;

    multipush(R1,R2,R3,R4);
    R1 = 5;
    R2 = inodeIndex;
    R3 = [SYSTEM_STATUS_TABLE + 1];

    call MOD_0;
    multipop(R1,R2,R3,R4);

    [RETURN] = 0;
    SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
    ireturn;
endif;



// If the FileDescriptor is invalid

[RETURN] = -1;
SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
ireturn;

