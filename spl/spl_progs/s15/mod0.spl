//Resource Manager Module
// print "RESOURCE MANAGER";
// breakpoint;



alias functionNum R1;
alias currentPID R2;
alias temp R3;



// Acquire Disk
if (functionNum == 3) then
    while ([DISK_STATUS_TABLE] == 1) do
        [PROCESS_TABLE + currentPID * 16 + 4] = WAIT_DISK;
        backup;
        call MOD_5;
        restore;
    endwhile;
    [DISK_STATUS_TABLE] = 1;
    [DISK_STATUS_TABLE + 4] = currentPID;
    return;
endif;



// Acquire Terminal	
if (functionNum == 8) then
    while ([TERMINAL_STATUS_TABLE] == 1) do
        [PROCESS_TABLE + currentPID * 16 + 4] = WAIT_TERMINAL;
        backup;
        call MOD_5;
        restore;
    endwhile;
    // print "Aquiring Terminal";
    [TERMINAL_STATUS_TABLE] = 1;
    [TERMINAL_STATUS_TABLE + 1] = currentPID;
    // breakpoint;
    return;
endif;



// Release Terminal	
if (functionNum == 9) then
    multipush(R2,R3);
    if (currentPID != [TERMINAL_STATUS_TABLE + 1]) then
        R0 = -1;
        multipop(R2,R3);
        return;
    endif;
    [TERMINAL_STATUS_TABLE] = 0;
    // print "Releasing Terminal";
    temp = 0;
    while (temp <= 15) do
        if ([PROCESS_TABLE + temp * 16 + 4] == WAIT_TERMINAL) then
            [PROCESS_TABLE + temp * 16 + 4] = READY;
        endif;
        temp = temp + 1;
    endwhile;
    R0 = 0;
    multipop(R2,R3);
    // breakpoint;
    return;
endif;

R0 = -1;
return;

